name: New FXserver version released
on:
  workflow_dispatch:
    inputs:
      optional:
        description: 'new optional version'
        required: false
      optional_url:
        description: 'optional version url'
        required: false
      recommended:
        description: 'new recommended version'
        required: false
      recommended_url:
        description: 'recommended version url'
        required: false
      latest:
        description: 'new latest version'
        required: false
      latest_url:
        description: 'latest version url'
        required: false
jobs:
  new-tag:
    name: Update Tag
    runs-on: ubuntu-latest
    if: github.event.inputs.latest && github.event.inputs.latest_url
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: "${{ secrets.COMMIT_KEY }}"
      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag: ${{ github.event.inputs.latest }}
      - name: Update Dockerfile
        if: steps.checkTag.outputs.exists == 'false'
        run: perl -i -pe 's,(?<=curl ).*(?= \|),${{ github.event.inputs.latest_url }},' Dockerfile
      - name: Configure Git
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit Dockerfile
        if: steps.checkTag.outputs.exists == 'false'
        run: "git commit -m '[Auto] New FXServer version: ${{ github.event.inputs.latest }}' -a"
      - name: Create tag
        if: steps.checkTag.outputs.exists == 'false'
        run: git tag ${{ github.event.inputs.latest }}
      - name: Push new tag
        if: steps.checkTag.outputs.exists == 'false'
        run: |
          git push
          git push origin ${{ github.event.inputs.latest }}
  new-recommended:
    name: Create PR for recommended
    runs-on: ubuntu-latest
    if: github.event.inputs.recommended && always()
    needs: ["new-tag"]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.recommended }}
      - name: Create release branch for PR
        run: |
          git branch ${{ github.event.inputs.recommended }}
          git checkout ${{ github.event.inputs.recommended }}
      - name: Push release branch
        run: git push
      - name: Create PR
        if: always()
        uses: peter-evans/create-pull-request@v4
        with:
          base: recommended
          branch: ${{ github.event.inputs.recommended }}
          delete-branch: true
          title: "[Auto] New FXServer recommended version: ${{ github.event.inputs.recommended }}"
          body: ""
          assignees: routmoute
  new-optional:
    name: Create PR for optional
    runs-on: ubuntu-latest
    if: github.event.inputs.optional && always()
    needs: ["new-tag", "new-recommended"]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.optional }}
      - name: Create release branch for PR
        run: |
          git branch ${{ github.event.inputs.optional }}
          git checkout ${{ github.event.inputs.optional }}
      - name: Push release branch
        run: git push
      - name: Create PR
        if: always()
        uses: peter-evans/create-pull-request@v4
        with:
          base: optional
          branch: ${{ github.event.inputs.optional }}
          delete-branch: true
          title: "[Auto] New FXServer optional version: ${{ github.event.inputs.optional }}"
          body: ""
          assignees: routmoute
